/*
 * Tomkey Keyboard - Simple OS Switching Implementation
 *
 * シンプルなWindows/Mac切り替えマクロを実装
 * レイヤー数: 7個（0-6）に制限
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        // Windowsデバイス接続切り替え（シンプル版）
        bt_sel_win: bt_sel_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>;
        };

        // Macデバイス接続切り替え（シンプル版）
        bt_sel_mac: bt_sel_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>;
        };

        // Windows切り替え（シンプル版）
        switch_to_win: switch_to_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt_sel_win>;
        };

        // Mac切り替え（シンプル版）
        switch_to_mac: switch_to_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt_sel_mac>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &lt 1 Q  &lt 1 W       &kp E          &kp R           &kp T                                   &kp Y        &kp U  &kp I     &kp O     &kp P
                &kp A    &kp S         &kp D          &kp D           &kp F    &kp SPACE       &kp SPACE      &kp G        &kp H  &kp J     &kp K     &kp L
                &kp Z    &kp X         &kp C          &kp V           &kp B    &sys_reset      &sys_reset     &kp N        &kp M  &mkp MB2  &mkp MB1  &mo 1
                &mo 2    &kp LEFT_ALT  &kp RIGHT_GUI  &kp LEFT_SHIFT  &kp TAB  &kp SPACE       &kp BACKSPACE  &lt 1 ENTER                             &mo 6
            >;
        };

        SCROLL {
            bindings = <
                &trans  &trans  &trans  &trans  &trans                                                  &kp LG(A)      &kp LG(W)       &trans          &kp LG(T)        &kp MINUS
                &trans  &trans  &trans  &trans  &trans               &kp LG(F)               &kp LG(C)  &kp LS(LG(V))  &trans          &kp UP_ARROW    &trans           &kp LA(L)
                &trans  &trans  &trans  &trans  &trans               &trans                  &kp LG(C)  &kp LG(V)      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(Y)
                &trans  &trans  &trans  &trans  &kp LC(RIGHT_ARROW)  &kp LC(LEFT_ARROW)      &kp LANG2  &kp LANG1                                                       &switch_to_win
            >;
        };

        CTROL {
            bindings = <
                &kp LEFT_BRACE  &kp LS(N1)  &kp LS(FSLH)  &trans     &kp LC(T)                                &trans  &trans  &trans  &trans  &trans
                &kp APOS        &trans      &trans        &kp LC(D)  &kp LC(F)  &kp LC(LS(V))      &kp LC(A)  &trans  &trans  &trans  &trans  &trans
                &trans          &trans      &trans        &kp LC(X)  &kp LC(V)  &trans             &kp LC(A)  &trans  &trans  &trans  &trans  &trans
                &trans          &trans      &trans        &kp LC(X)  &kp LC(C)  &kp LC(V)          &kp LC(N)  &trans                          &trans
            >;
        };

        NUMBER {
            bindings = <
                &kp N1  &kp N2     &kp N3   &kp LS(NUMBER_8)  &kp LS(N9)                              &kp LS(SLASH)     &trans  &trans  &kp SLASH  &kp SEMICOLON
                &kp N4  &kp N5     &kp N6   &trans            &trans      &trans      &kp LEFT_BRACE  &kp LS(NUMBER_1)  &trans  &trans  &trans     &kp SQT
                &kp N7  &kp N8     &kp N9   &trans            &trans      &trans      &trans          &kp LEFT_SHIFT    &trans  &trans  &trans     &trans
                &kp N0  &kp COMMA  &kp DOT  &kp MINUS         &trans      &trans      &trans          &trans                                       &trans
            >;
        };

        FUNCTION {
            bindings = <
                &kp SEMI              &kp LS(EXCL)          &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
                &kp N1                &kp F12               &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
                &kp RIGHT             &kp LEFT              &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
                &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        markdw {
            bindings = <
                &kp GRAVE  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)                      &kp LS(N5)  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)
                &kp MINUS  &kp LS(N0)  &kp EQUAL   &trans      &trans      &trans      &trans  &trans      &trans      &trans      &trans      &trans
                &trans     &trans      &trans      &trans      &trans      &trans      &trans  &trans      &trans      &trans      &trans      &trans
                &trans     &trans      &trans      &trans      &trans      &trans      &trans  &trans                                          &trans
            >;
        };

        mac_number {
            // Layer 6: システム管理 + OS切り替え機能
            bindings = <
                &bootloader &sys_reset &switch_to_win &switch_to_mac &trans        &trans     &trans      &trans      &trans     &trans
                &bt BT_CLR  &trans     &trans     &trans     &trans          &trans     &trans      &trans      &trans     &trans
                &trans     &trans     &trans     &trans     &trans          &trans     &trans      &trans      &trans     &trans
                &trans     &trans     &trans     &trans     &trans          &trans     &trans      &trans      &trans     &trans
            >;
        };
    };
};
