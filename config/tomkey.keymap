#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 2 Q    &kp W         &kp E             &kp R           &kp T                                                 &kp Y        &kp U  &kp I     &kp O     &lt 5 P
&kp A      &kp S         &kp D             &kp F           &kp G        &mo 6                 &kp BACKSLASH      &kp H        &kp J  &kp K     &kp L     &lt 3 ENTER
&kp Z      &kp X         &kp C             &kp V           &kp B        &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp N        &kp M  &mkp MB2  &mkp MB1  &lt 2 SLASH
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &lt 4 SPACE  &kp LA(SPACE)         &kp BACKSPACE      &lt 3 ENTER                             &lt 5 ESCAPE
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                               &kp LC(NUMBER_3)  &kp LC(W)       &trans          &kp LC(T)        &kp MINUS
&trans  &trans  &trans  &trans  &trans     &kp LC(F)      &kp LC(A)  &kp LC(LS(V))     &trans          &kp UP_ARROW    &trans           &kp LA(L)
&trans  &trans  &trans  &trans  &trans     &kp LC(R)      &kp LC(V)  &kp LC(V)         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(Y)
&trans  &trans  &trans  &trans  &kp LC(N)  &kp LC(B)      &kp LANG2  &kp LANG1                                                          &kp LC(Z)
            >;
        };

        ARROW {
            bindings = <
&kp LEFT_BRACE  &kp LS(N1)  &kp LS(FSLH)  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&kp APOS        &kp FSLH    &kp BSLH      &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans      &trans        &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans      &trans        &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp N1  &kp N2     &kp N3   &kp FSLH  &kp BSPC                      &kp LC(N3)  &kp LC(N2)  &kp LC(N1)  &kp BSPC  &kp BSPC
&kp N4  &kp N5     &kp N6   &kp BSPC  &kp BSPC  &trans      &trans  &kp BSPC    &kp BSPC    &kp BSPC    &kp BSPC  &kp BSPC
&kp N7  &kp N8     &kp N9   &kp BSPC  &kp BSPC  &trans      &trans  &kp BSPC    &kp BSPC    &kp BSPC    &kp BSPC  &kp BSPC
&kp N0  &kp COMMA  &kp DOT  &trans    &trans    &trans      &trans  &kp BSPC                                      &trans
            >;
        };

        FUNCTION {
            bindings = <
&kp SEMI              &kp APOS              &kp LGUI         &trans        &trans                              &trans  &trans  &trans  &trans  &trans
&kp N1                &trans                &trans           &trans        &trans  &bt BT_CLR_ALL      &trans  &trans  &trans  &trans  &trans  &trans
&kp RIGHT             &kp LEFT              &trans           &trans        &trans  &bt BT_SEL 0        &trans  &trans  &trans  &trans  &trans  &trans
&kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_UP  &kp C_VOL_DN  &trans  &bt BT_SEL 1        &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&kp LG(Q)      &kp LC(W)  &trans     &trans     &trans                      &bt BT_PRV  &bt BT_NXT  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp LG(LS(Z))  &trans     &kp LC(C)  &trans     &trans  &trans      &trans  &trans      &trans      &trans        &trans        &trans
&kp LG(Z)      &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans  &trans      &trans  &trans      &trans      &trans        &trans        &trans
&trans         &trans     &trans     &trans     &trans  &trans      &trans  &trans                                              &trans
            >;
        };
    };
};
